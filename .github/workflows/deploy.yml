name: Deploy project

on:
  push:
    branches:
      - main

jobs:
  build-lint-test:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use PNPM package manager
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Check for linting errors
        run: pnpm run lint

      - name: Check for type errors
        run: pnpm run type-check

      - name: Run tests
        run: pnpm run test

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest

    needs: build-lint-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use PNPM package manager
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Restore dependencies from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Security Audit
        run: pnpm audit

  deploy:
    name: Deploying project
    runs-on: ubuntu-latest

    needs: security_audit

    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use PNPM package manager
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Restore dependencies from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Deploy to Vercel
        run: echo Y | pnpm exec vercel . --prod --token $VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Check deployment status
        id: deployment_status
        run: echo "::set-output name=success::true"
        continue-on-error: true

  rollback:
    name: Rollback deployment
    runs-on: ubuntu-latest

    needs: deploy
    if: failure()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use PNPM package manager
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Restore dependencies from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Rollback deployment
        run: pnpm exec vercel rollback
